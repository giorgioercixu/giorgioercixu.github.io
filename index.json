[{"authors":null,"categories":null,"content":"Erci Xu is a storage researcher who mostly focuses on distributed storage systems and software/hardware reliability. He has published multiple paper at top venues including USENIX OSDI, FAST, ATC and ACM Eurosys. He is the recipient of two USENIX FAST Best Paper Awards (FAST'23 and FAST'24) and ACM SIGOPS China Rising Star Award.\nBesides research, he enjoys reading books and occasionally writes reviews where one can find it at Goodreads or 知乎.\nErci Xu\u0026rsquo;s Chinese name is 徐尔茨 (sounds like hsu ertz). He also goes by the name of Giorgio, much easier to pronounce now, innit?\n","date":1696636800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1633564800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"Erci Xu is a storage researcher who mostly focuses on distributed storage systems and software/hardware reliability. He has published multiple paper at top venues including USENIX OSDI, FAST, ATC and ACM Eurosys.","tags":null,"title":"Giorgio (Erci) Xu","type":"authors"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature. Slides can be added in a few ways:\nCreate slides using Wowchemy\u0026rsquo;s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes. Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"https://giorgioercixu.github.io/talk/example-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example-talk/","section":"event","summary":"An example talk using Wowchemy's Markdown slides feature.","tags":[],"title":"Example Talk","type":"event"},{"authors":["Yanbo Zhou","Erci Xu (Corresponding)","Li Zhang","Kapil Karkra","Mariusz Barczak","Wayne Gao","Wojciech Malikowski","Mateusz Kozlowski","Łukasz Łasek","Ruiming Lu","Feng Yang","Lilong Huang","Xiaolu Zhang","Wenrui Li","Jinhu Li","Keqiang Niu","Jiaji Zhu","Jiesheng Wu"],"categories":null,"content":"","date":1713571200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1713571200,"objectID":"5b01e197f1e10270c919132797f47d9d","permalink":"https://giorgioercixu.github.io/publication/eurosys24/","publishdate":"2023-04-20T00:00:00Z","relpermalink":"/publication/eurosys24/","section":"publication","summary":"Cloud local disks are attractive for their affordable price and high performance. The recent advancement in CPUs motivates cloud vendors to further multiplex the computing resources to serve more users. Unfortunately, such proposals are constrained by the limited offerings of cloud local disks per server as the underlying storage devices are either large but slow (e.g., HDDs) or fast yet small (e.g., NVMe SSDs).\n\nIn this paper, we explore the possibility of leveraging high-capacity QLC-based SSDs for cloud local disks. However, the three preliminary unsuccessful attempts indicate that QLC SSDs cannot simply work as drop-in replacement. The root cause is the two levels of write amplification (WA) caused by device-level address mapping with Indirection Unit and NAND-level garbage collection.\n\nWith these lessons learned, we propose SONIC, the next-gen local disks in the OASIS cloud. SONIC includes a high-performance SSD as write buffers and a large-capacity QLC SSD for persistence. With a two-level Logical to Physical (L2P) address mapping table, SONIC achieves fine-grained (4KB) data accessing and significantly alleviates the two levels of WA. Results show that SONIC always prevails with superior performance and can achieve up to 2.47x, 1.82x, and 2.03x speedups against the second-best peers in micro, application and deployment benchmarking, respectively. As of now, we have deployed SONIC on thousands of servers and made SONIC open-source to the public.","tags":["TCP","Network","storage"],"title":"Sonic: the Next-Gen Local Disks for the Cloud","type":"publication"},{"authors":["Weidong Zhang","Erci Xu (Corresponding)","Qiuping Wang","Xiaolu Zhang","Yuesheng Gu","Zhenwei Lu","Tao Ouyang","Guanqun Dai","Wenwen Peng","Zhe Xu","Shuo Zhang","Dong Wu","Yilei Peng","Tianyun Wang","Haoming Zhang","Jiasheng Wang","Wenyuan Yan","Yuanyuan Dong","Wenhui Yao","Zhongjie Wu","Lingjun Zhu","Chao Shi","Yinhu Wang","Rong Liu","Junping Wu","Jiaji Zhu","Jiesheng Wu"],"categories":null,"content":"","date":1708387200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1708387200,"objectID":"8ce940fb2b3cfeaaec1fadb731b31272","permalink":"https://giorgioercixu.github.io/publication/fast24/","publishdate":"2020-07-20T00:00:00Z","relpermalink":"/publication/fast24/","section":"publication","summary":"In this paper, we qualitatively and quantitatively discuss the design choices, production experience, and lessons in building the Elastic Block Storage (EBS) at Alibaba Cloud over the past decade. To cope with hardware advancement and users demands, we shift our focus from design simplicity in EBS1 to high performance and space efficiency in EBS2, and finally reducing network traffic amplification in EBS3.\n\nIn addition to the architectural evolutions, we also summarize the lessons and experiences in development as four topics, including: (i) achieving high elasticity in latency, throughput, IOPS and capacity; (ii) improving availability by minimizing the blast radius of individual, regional, and global failure events; (iii) identifying the motivations and key tradeoffs in various hardware offloading solutions; and (iv) identifying the pros/cons of the alternative solutions and explaining why seemingly promising ideas would not work in practice.","tags":["storage","block store","EBS"],"title":"What's the Story in EBS Glory: Evolutions and Lessons in Building Cloud Block Store (awarded Best Paper)","type":"publication"},{"authors":["Giorgio (Erci) Xu"],"categories":["Review"],"content":"《Evicted: Poverty and Profit in the American City》是普林斯顿（Princeton）社会 学教授马修·戴斯蒙德（Matthew Desmond）在2016年出版的关于城市低端人口居住条件现状 的调查研究。之所以选择这个课题作为著书的核心研究内容，一方面是因为马教授早年自己 父母经济困顿，跟着一起流离失所，因此自然而然地对遭受同样悲剧的群体抱有同情 1。另一方面，则是因为美国下层阶级长期以来为人所认知的是非法药物与枪支泛滥， 但居无定所这一既是结果也是助推剂的关键因素在以往的社会学研究中似乎鲜少提及。\n全书的个案讨论涉及密尔沃基（Milwaukee）里多个种族以及不同成长背景的个体或家庭， 这一选择无疑凸显了问题在社会中下阶层的全面性和覆盖性。虽然我对北美贫民耳闻目睹并 不算少，但书中有些事实对我而言仍可算是颠覆认知。\n书中不少人都因自身条件受限（如残疾、单身母亲等）而可以每月领取一笔不低的现金救济 （即Supplemental Security Income）用以支撑生活，书中人物能领取到600至700美元每月 2。除此以外，联邦政府还会有一定的食品券发放，对应书中的一个家庭而言，其金额 也在300美元左右。\n但即便如此，许多人依旧生活困顿。因为就是这近一千美金左右的净收入，其中三分之二甚 至更多用于支付房租，余钱对于一个三口甚至四口之家（一个单亲妈妈和三个未成年）也仅 仅是能满足温饱。\n一种想当然的建议是去租赁便宜的住宅以节约收入用于其他开支。然而，吊诡的地方在于， 即便是位于“脏乱差”街区的公寓，其租金也与其他条件更为优渥地区的租金类似。房东的解 释是，低收入和无收入群体对居住环境的破坏往往严重，导致房东需要额外出资进行修缮。 而事实上，房东们却鲜少能提供配套的家电厨卫修理和换新。更多的时候，房东做的仅仅是 在租客离开时（一般是因租金欠付，而遭强制驱逐，即evicted)重新翻修房屋。政府面对这 种困局，在更多的时候，都处于一种无计可施的无奈。\n看到以上种种，我脑里想起的却是远在万里之外，早在近百年以前，我们陕甘宁边区政府也 遇到类似的问题。一些老乡虽然出身寒苦，别说三代，往上再倒十代都是贫下中农。然而， 这些“土改根子”却好吃懒做，不事生产，对改天换日的火热革命兴趣寥寥，倒是抽大烟、串 门子、算卦占卜比较有兴趣。为了惩前毖后，治病救人，边区政府发起了改造“二流子”（对 此类老百姓的统称）的运动。通过宣传鼓动、思想教育、自我检讨，多管齐下挽救解放区的 懒汉闲妇。从后期反馈来看，运动应当是取得了不错的效果，甚至有老“二流子”成了劳动模 范的巨大转变3。\n所以，拜总统也好，州长先生也罢，可以多看看中国的一些老经验。有时候想一想，给钱当 然是从正面短暂缓解了一些问题。但揪斗坏分子，严肃处理错误典型的长期震慑力亦不容小 觑。毕竟光是”杀、关、管“这一条，就让很多人在填档案的相关情况时，颤颤巍巍了几十 年。\n关于马修·戴斯蒙德的背景和早年经历，可以参见其官方网站或相关采访。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n有关Supplemental Security Income（SSI）的具体信息，可以参见美国社会保障局 的官方网站。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n关于陕甘宁边区改造“二流子”运动的更多细节和历史背景，可以参见相关历史文献和档案。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":1696636800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1633564800,"objectID":"c195f9c0e7c3852fc505a934173c7672","permalink":"https://giorgioercixu.github.io/post/evicted/","publishdate":"2023-10-07T00:00:00Z","relpermalink":"/post/evicted/","section":"post","summary":"A book review on Matthew Desmond's research on poverty and profit in the American cities.","tags":["Chinese","Review"],"title":"Evicted Review (Chinese)","type":"post"},{"authors":["Giorgio (Erci) Xu"],"categories":["Review"],"content":"《Range: Why Generalists Triumph in a Specialized World》是调查记者David Epstein 2019年出的一本书非虚构类读物。这本书上了NYT的畅销榜首名，同时也受到了Bill Gates的大力推荐(参见We need more Rogers)。\n本书主要是从“通才”的角度讲述这种人才的可贵以及呼吁对于通识教育的重视。书中列举了费德勒、达尔文、威尼斯水城的女子十二乐坊，乃至于任天堂等等名人名事。核心观点包括大家应该扩展知识面，早期教育要重视通识教育等等。但总的来看，观点都稀松平常，两三句话能说明白的事情，实在不明白有什么值得大书特书的。\n首先，诚如文章所言，当今世界的专业化程度越来越高，各行各业都处在一个不断细分的过程。但是我想说，当今社会的专业化本身就是构建于大量通识教育之上的结果。这一点凡是完成过正规大学教育的，应该都能明白。反倒是建国之初，由于“一边倒”的政策需求，我们盲目向老大哥学习，在当时有过一场影响深远的院校改革行动。虽然其目的和考量是多重的，但是把很多综合性大学化为了专业性很强的院校无疑是个糟糕的打算。我无意去评价这个运动在其他方面是否取得了预计的结果，但是仅就教育本身而言无疑是失败的。后来在90年代初，决策者们终于拨乱反正，形成了目前大学以综合性为主，注重培养通识教育的现状。\n其次，我认同作者对于专业化领域里专家们应当更多进行跨领域学习和交流的建议。这里作者对于当前的科研领域有一个很深刻的比喻，就是大家都在挖着自己沟壑，而难以意识到自己单方面难以解决的困难，其实只需要抬起头看看其他领域的工作，就能被解决或者说得到深刻启发。这个当然是事实，但同时也没什么好强调的，因为大部分的科研成果本来就是跨领域的产物。就比如我所研究的固态硬盘（即SSD），其工作原理就来源于量子力学的发展（Flash NAND由Quantum Tunneling实现数据存储）。作为科研人员，最为苦恼的事情，不是不知道要去看看别人的一些成果，而是不知道该去看哪个方向。有时候真的是运气使然，碰巧在研究生涯中有过这样或者那样的\u0026quot;旁门左道\u0026quot;知识以启发手头的研究。但人的时间总归是有限的，科研人员不可能为了找所谓灵感，今天去学个周易，明天看看推背经，后天研究一下炼金术。因此，片面强调知识的宽度是没有意义的，而且在我看来，除了民科也没有哪个科研人员只扎在自己那一点点东西上，不接触外界。\n我对职业作家通过一系列故事去阐述一个道理（或曰insight）的书，有种复杂的情绪。我最早开始阅读非虚构类作品时，就是通过专栏作家Malcolm Gladwell的 《Tipping Point》 、《Outlier》等作品入门。最开始看的时候，确实是感到内里有股非常吸引人的力量，当然这一方面是作者在挑选题材、确立观点上确有可取之处，同时其出色的叙事功底亦有相当助力。\n但后来自己开始写论文，又或者也是年龄大了，对于这类论述性的书籍就进入一个祛魅的过程（难说是critical thinking还是cynical thinking）。比如Malcolm后来的《Talking to strangers》以及今天提到的这本《Range》。不仅是在观点层面会去质疑某个想法的普适性，也会去看内容的论述严谨与否，而往往很多论述似乎是经不起反复推敲的。比如一个典型的缺陷是文章里的很多逻辑关系，到底是像作者说的因果关系（Casual）还是仅仅是关联而已（Correlated），又或者是书里几个章节罗列的案例调查（Case Study)是否具备代表性。\n相较而言，科学家或者行业专业人士写的书，在上述方面一般会好很多。一个很重要的原因，就是书的内容一般来自于前期的工作总结，而这部分工作往往早就经过同行评议（例如发表论文或者在业内作过报告）。比如Daniel Kahneman的《Thinking, Fast and Slow》就是很好的例子（《Range》里也大量引用了Daniel的结果）。毕竟，人家在一个行业风风雨雨浸淫几十年，这不是一个记者看点材料，做点专访、看一些故事就能相比的。这些专栏作家写点小文章，或者做点报告什么的，其实往往还比较出色（这也是很多专栏作家爱上这个TED的原因）。因为这些材料能留给大家思考的时间少，大家也可以理解成\u0026quot;鸡汤\u0026quot;要趁热喝。当用书籍这种方式进行传播的时候，这鸡汤就冷了，鸡精的味道就藏不住了。当然，专业人士经常也会搞些这种鸡汤创作（比如Jordan Peterson），更会写出糟糕的科普读物（比如Michio Kaku的《the God Equation》)，但\u0026quot;信天游\u0026quot;的概率毕竟是要低一些。\n写在后面 本书购于京东，为国内合法出版物。我对专栏作家了解的不多，自己也是品味很庸俗的人，如有讲的不对的地方，请大家批评指正。\n","date":1696636800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1633564800,"objectID":"150c94d6f43b0589b53036682de16bad","permalink":"https://giorgioercixu.github.io/post/range/","publishdate":"2023-10-07T00:00:00Z","relpermalink":"/post/range/","section":"post","summary":"A book review on \"Range Why Generalists Triumph in a Specialized World\"s by David Epstein.","tags":["Chinese","Review"],"title":"Range Review (Chinese)","type":"post"},{"authors":["Giorgio (Erci) Xu"],"categories":["Review"],"content":"《Zero to One》是硅谷著名创业者Peter Thiel关于创业公司商业管理的一本书。面世以来，可以说被很多国内的创业者奉为圭臬。这一方面当然是因为Peter在商业上的建树，无论是早期创立的Paypal还是后期的Palantir，都是在硅谷叱咤风云的企业。另一方面，在我看来，书中的若干观点也确实具有鲜明的信息时代特色，而且落在实操层面，对于创业者来说具备很强的操作性。\n我从未有过创业的经历也没有在初创型企业就业过，因此在阅读的过程中，始终对于其中的商业模式的讨论有着一层隔阂。但是其中的观点和讨论，也还是引起了我这样一个普通的消费者的兴趣。\n我看完全书记忆最深的一个观点就是Peter对于垄断的追求。当然我需要指明，Peter所鼓励的垄断主要是创新型垄断。例如，Google通过Page Rank算法，创立了搜索这一种互联网商业模式，并通过其优秀的技术实力，统治了全世界互联网的搜索，攫取了大量利润。Peter反复强调创新型垄断应当是值得大力鼓励的，这减少了因为低层次竞争带来的资本损耗等等。我是相当认同这一观点的，因为技术力不同带来的体验差异是绝对的。我几乎没用过百度，但即便在我不多的体验中，也可以感受到那种如鲠在喉的糟糕体验。\n目前来看，这种创新型垄断即便是在互联网企业也是少见的，反而很多的时候是模式创新和市场垄断相结合。例如，滴滴当然是抓住了移动互联网这一技术快速发展的契机，但做大做强似乎并不是其有显著优于其他企业的技术优势，而是市场铺得足够大，优惠给得足够彻底。这种垄断如果形成，其后果是可以想见的，无非是坐地起价，凭借体量优势迅速把过去补贴烧的钱赚回来。\n但我很困惑的地方在于，为什么有这么多国内企业会觉得这种垄断市场的方案能够在社会主义市场经济的环境下行得通，特别是很多领域是涉及民生的根本（比如买菜）。当然我现在说无疑是马后炮，因为我写这个书评的时候，美团刚领了三十多亿元的罚款。即便王兴姿态很低，很牵强地把“美团”和共同富裕牵扯起来，也于事无补。这前后的反差，很像是当年公私合营的时候对资本家们“白天敲锣打鼓，夜里抱头痛哭”的形容，我不由想起来一副毛主席在遂川时写的红色对联：\n想当年你剥削工农，好就好，利中生利 看今日我斩杀土劣，怕不怕，刀上加刀\n书给我留下的另一个深刻印象是资本主义下人的异化，主要是Peter Thiel的异化。我对Peter Thiel略有一点了解，因为之前看到不少对其的报道，最近的一篇是Bloomberg Businessweek的封面文章“American Oligarch”，文中简略地谈谈了Peter Thiel作为一个传统硅谷的反叛者，是如何游走在华盛顿特区，并进而走向了人的彻底资本化。比如他作为一个同性恋者、硅谷创业者，能够撇开个人情绪，和Steve Bannon打得火热，这是为了给Palantir拿美国政府的大单子。甚至于以头马身份召集了众多硅谷大佬和大统领特朗普开会，号召众企业家积极改造自己的人生观、世界观、价值观，更好地服务于“让美国再次强大”的伟大征程。\n较之来看，大中华地区我觉得类似的人还有李嘉诚，也是很纯粹的资本人。我想只要是去香港呆过哪怕几天的人，对于李嘉诚或者长江实业恐怕都难有好感。但比之国内的企业家，我仍然得说自己很佩服李的战略眼光（比如早在若干年前就把战略中心进行了转移以及大力投资基础性设施和民生领域）。而国内的房地产商别说能不能预感到大环境变化，就即便到了大限将至之时仍然连家里这几张嘴都管不住，很难让人不去用“风口上的猪”来形容他们。\n写在后面 我对经济、行商了解得很肤浅，对科技企业也仅有一般性的认识。若有不符事实之处，敬请批评指正。此书购于京东，为国内公开可售发行刊物。\n","date":1696636800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1633564800,"objectID":"6fa02496b39be3bfa22bf9839621f42e","permalink":"https://giorgioercixu.github.io/post/zerotoone/","publishdate":"2023-10-07T00:00:00Z","relpermalink":"/post/zerotoone/","section":"post","summary":"A book review on Peter Thiel's Zero to One","tags":["Chinese","Review"],"title":"Zero to One Review (Chinese)","type":"post"},{"authors":["Lingjun Zhu","Yifan Shen","Erci Xu (Corresponding)","Bo Shi","Ting Fu","Shu Ma","Shuguang Chen","Zhongyu Wang","Haonan Wu","Zhendan Yang","Xingyu Liao","Wei Lin","Yijun Hou","Rong Liu","Chao Shi","Jiaji Zhu","Jiesheng Wu"],"categories":null,"content":"","date":1689811200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1689811200,"objectID":"eb2e79ba7361b189e9f2ae5f9f500896","permalink":"https://giorgioercixu.github.io/publication/atc23/","publishdate":"2023-04-20T00:00:00Z","relpermalink":"/publication/atc23/","section":"publication","summary":"The TCP protocol remains to be the main workhorse in today’s large-scale data centers. However, the increasingly demanding performance expectations—led by the advancements in hardware (e.g., 25 to 100Gbps link speed) and software (e.g., Intel DPDK support)—make the kernel-based TCP stack no longer a favorable option. Over the past decade, multiple parties have proposed various user-stack TCP stacks where they offer the things-as-usual TCP support but with significant performance improvement. Unfortunately, we find these proposals may not work well in the field, especially in large-scale deployments. In this paper, we present Luna, a user-space TCP stack that has been successfully serving nearly 1 million nodes in the Aliyun cloud for the last five years. We discuss our lessons on the design tradeoffs with an emphasis on three unique features in thread, memory, and traffic models. The extensive microbenchmark evaluations and performance statistics collected from the field demonstrate that Luna can outperform kernel and other user-space TCP stacks with up to 3.5X in throughput and reduce up to 53% latency.","tags":["TCP","Network","storage"],"title":"Deploying User-space TCP at Cloud Scale with LUNA","type":"publication"},{"authors":["Haochen He","Erci Xu","Shanshan Li","Zhouyang Jia","Si Zheng","Yue Yu","Jun Ma","Xiangke Liao"],"categories":null,"content":"","date":1681948800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1681948800,"objectID":"e093da05f2f4f45980ee6bc023b2a3ed","permalink":"https://giorgioercixu.github.io/publication/vldb23/","publishdate":"2020-07-20T00:00:00Z","relpermalink":"/publication/vldb23/","section":"publication","summary":"NVMe SSD hugely boosts the I/O speed, with up to GB/s throughput and microsecond-level latency. Unfortunately, DBMS users can often find their high-performanced storage devices tend to deliver less-than-expected or even worse performance when compared to their traditional peers. While many works focus on proposing new DBMS designs to fully exploit NVMe SSDs, few systematically study the symptoms, root causes and possible detection methods of such performance mismatches on existing databases. In this paper, we start with an empirical study where we systematically expose and analyze the performance mismatches on six popular databases via controlled configuration tuning. From the study, we find that all six databases can suffer from performance mismatches. Moreover, we conclude that the root causes can be categorized as databases’ unawareness of new storage devices characteristics in I/O size, I/O parallelism and I/O sequentiality. We report 17 mismatches to developers and 15 are confirmed. Additionally, we realize testing all configuration knobs yields low efficiency. Therefore, we propose a fast performance mismatch detection framework and evaluation shows that our framework brings two orders of magnitude speedup than baseline without sacrificing effectiveness.","tags":["SSD","Database"],"title":"When Database Meets New Storage Devices: Understanding and Exposing Performance Mismatches via Configurations","type":"publication"},{"authors":["Teng Wang","Zhouyang Jia","Shanshan Li","Si Zheng","Yue Yu","Erci Xu","Shaoliang Peng","Xiangke Liao"],"categories":null,"content":"","date":1680825600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1680825600,"objectID":"188684eaebe2595309d62b27e393c914","permalink":"https://giorgioercixu.github.io/publication/icse23/","publishdate":"2021-05-07T00:00:00Z","relpermalink":"/publication/icse23/","section":"publication","summary":"Software systems introduce an increasing number of configuration options to provide flexibility, and support updating the options on the fly to provide persistent services. This mechanism, however, may affect the system reliability, leading to unexpected results like software crashes or functional errors. In this paper, we refer to the bugs caused by on-the-fly configuration updates as on-the-fly configuration bugs, or OCBugs for short.\n\nIn this paper, we conducted the first in-depth study on 75 real-world OCBugs from 5 widely used systems to understand the symptoms, root causes, and triggering conditions of OCBugs. Based on our study, we designed and implemented PARACHUTE, an automated testing framework to detect OCBugs. Our key insight is that the value of one configuration option, either loaded at the startup phase or updated on the fly, should have the same effects on the target program. PARACHUTE generates tests for on-the-fly configuration updates by mutating the existing tests and conducts differential analysis to identify OCBugs. We evaluated PARACHUTE on 7 real-world software systems. The results show that PARACHUTE detected 75% (42/56) of the known OCBugs, and reported 13 unknown bugs, 11 of which have been confirmed or fixed by developers until the time of writing.","tags":["software engineering","software dependability","bug detection"],"title":"Understanding and Detecting On-the-Fly Configuration Bugs (awarded Distinguished Paper)","type":"publication"},{"authors":["Wenzhe Zhu","Yongkun Li","Erci Xu","Fei Li","Yinlong Xu","John C.S. Lui"],"categories":null,"content":"","date":1679270400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1679270400,"objectID":"17f05340fed50b6917c3c08f2e03e0cd","permalink":"https://giorgioercixu.github.io/publication/sigmetrics23/","publishdate":"2020-07-20T00:00:00Z","relpermalink":"/publication/sigmetrics23/","section":"publication","summary":"Modern cloud block service provides cloud users with virtual block disks (VDisks), and it usually relies on a forwarding layer consisting of multiple proxy servers to forward the block-level writes from applications to the underlying distributed storage. However, we discover that severe traffic imbalance exists among the proxy servers at the forwarding layer, thus creating a performance bottleneck which severely prolongs the latency of accessing VDisks. Worse yet, due to the diverse access patterns of VDdisks, stable traffic and burst traffic coexist at the forwarding layer, and thus making existing load balancing designs inefficient for balancing the traffic at the forwarding layer of VDisks, as they are unaware of and also lacks the ability to differentiate the decomposable burst and stable traffic. To this end, we propose a novel traffic forwarding scheme DiffForward for cloud block services. DiffForward differentiates the burst traffic from stable traffic in an accurate and efficient way at the client side, then it forwards the burst traffic to a decentralized distributed log store to realize real-time load balance by writing the data in a round-robin manner and balances the stable traffic by segmentation. DiffForward also judiciously coordinates the stable and burst traffic and preserves strong consistency under differentiated forwarding. Extensive experiments with reallife workloads on our prototype show that DiffForward effectively balances the traffic at the forwarding layer at a fine-grained subsecond level, thus significantly reducing the write latency of VDisks.","tags":["cloud"],"title":"DiffForward: On Balancing Forwarding Traffic for Modern Cloud Block Services via Differentiated Forwarding","type":"publication"},{"authors":["Ruiming Lu","Erci Xu (co-first)","Yiming Zhang","Fengyi Zhu","Zhaosheng Zhu","Mengtian Wang","Zongpeng Zhu","Guangtao Xue","Jiwu Shu","Minglu Li","Jiesheng Wu"],"categories":null,"content":"","date":1676851200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1676851200,"objectID":"3805514d19fe7812a6704726904b0a7c","permalink":"https://giorgioercixu.github.io/publication/fast23-1/","publishdate":"2020-07-20T00:00:00Z","relpermalink":"/publication/fast23-1/","section":"publication","summary":"The newly-emerging 'fail-slow' failures plague both software and hardware where the victim components are still functioning yet with degraded performance. To address this problem, this paper presents Perseus, a practical fail-slow detection framework for storage devices. Perseus leverages a light regression-based model to fast pinpoint and analyze fail-slow failures at the granularity of drives. Within a 10-month close monitoring on 248K drives, Perseus managed to find 304 fail-slow cases. Isolating them can reduce the (node-level) 99.99th tail latency by 48.05%. We assemble a large-scale fail-slow dataset (including 41K normal drives and 315 verified fail-slow drives) from our production traces, based on which we provide root cause analysis on fail-slow drives covering a variety of ill-implemented scheduling, hardware defects, and environmental factors. We commit to releasing the dataset to the public for fail-slow study.","tags":["SSD","NVM","storage"],"title":"Perseus: A Fail-Slow Detection Framework for Cloud Storage Systems (awarded Best Paper)","type":"publication"},{"authors":["Su Zhou","Erci Xu (corresponding)","Hao Wu","Yu Du","Jiacheng Cui","Wanyu Fu","Chang Liu","Yingni Wang","Wenbo Wang","Shouqu Sun","Xianfei Wang","Bo Feng","Biyun Zhu","Xin Tong","Weikang Kong","Linyan Liu","Zhongjie Wu","Jinbo Wu","Qingchao Luo","Jiesheng Wu"],"categories":null,"content":"","date":1676851200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1676851200,"objectID":"773e7b6c26705bf52ebbed53738ef588","permalink":"https://giorgioercixu.github.io/publication/fast23-2/","publishdate":"2020-07-20T00:00:00Z","relpermalink":"/publication/fast23-2/","section":"publication","summary":"Cloud object storage vendors are in the forever pursuit of better cost efficiency. The emerging Shingled Magnetic Recording (SMR) drive becomes an economically favorable choice due to significantly improved areal density. However, SMR drives were mostly deployed in the archival-class object storage because they require zone-level sequential write and erase in bulk. For standard-class object storage, previous studies and our preliminary exploration reveal that existing SMR drive solutions can suffer from severe performance penalty and unpredictability.\n\nIn this paper, we propose SMRSTORE, an SMR-based storage engine for standard-class object storage without compromising performance or durability. The key features of SMRSTORE include directly bridging the semantics of distributed file system with the zoned namespace in SMR drives, using a complete log-structured design, and applying guided data placement to reduce GC activities and achieve consistent performance. The evaluation shows that SMRSTORE delivers comparable performance as Ext4 on the Conventional Magnetic Recording (CMR) drives, and can be up to 2.16x faster than F2FS on SMR drives. Currently, we have deployed SMRSTORE in Alibaba Cloud Object Storage Service (OSS) to store hundreds of PBs of data in standard class. We plan to use SMR drives for all classes of OSS in the near future.","tags":["storage","HDD","SMR"],"title":"SMRSTORE: A Storage Engine for Cloud Object Storage on HM-SMR Drives","type":"publication"},{"authors":["Ruiming Lu","Erci Xu (co-first)","Yiming Zhang","Zhaosheng Zhu","Mengtian Wang","Zongpeng Zhu","Guangtao Xue","Minglu Li","Jiesheng Wu"],"categories":null,"content":"","date":1658275200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1658275200,"objectID":"87d9d368d83b634486e6958a7bceeb46","permalink":"https://giorgioercixu.github.io/publication/atc22/","publishdate":"2022-07-20T00:00:00Z","relpermalink":"/publication/atc22/","section":"publication","summary":"NVMe SSD has become a staple in modern datacenters thanks to its high throughput and ultra-low latency. Despite its popularity, the reliability of NVMe SSD under mass deployment remains unknown. In this paper, we collect logs from over one million NVMe SSDs deployed at Alibaba, and conduct extensive analysis. From the study, we identify a series of major reliability changes in NVMe SSD. On the good side, NVMe SSD becomes more resilient to early failures and variances of access patterns. On the bad side, NVMe SSD becomes more vulnerable to complicated correlated failures. More importantly, we discover that the ultra-low latency nature makes NVMe SSD much more likely to be impacted by fail-slow failures.","tags":["SSD","NVMe","storage"],"title":"NVMe SSD Failures in the Field: the Fail-Stop and the Fail-Slow","type":"publication"},{"authors":["Cai Deng","Qi Chen","Xiangyu Zou","Erci Xu","Bo Tang","Wen Xia"],"categories":null,"content":"","date":1642636800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1642636800,"objectID":"6e2cf34563ef46ad9360e50f4a4835ab","permalink":"https://giorgioercixu.github.io/publication/icde22/","publishdate":"2022-01-20T00:00:00Z","relpermalink":"/publication/icde22/","section":"publication","summary":"Images occupy a large amount of storage in data centers. To cope with the explosive growth of the image storage requirement, image compression techniques are devised to shrink the size of every single image at first. Furthermore, image deduplication methods are proposed to reduce the storage cost as they could be used to eliminate redundancy among images. However, state-of-the-art image deduplication methods either can only eliminate file-level coarse-grained redundancy or cannot guarantee lossless deduplication. In this work, we propose a new lossless image deduplication framework to eliminate fine-grained redundancy among images. It first decodes images to expose similarity, then eliminates fine-grained redundancy on the decoded data by delta compres-sion, and finally re-compresses the remaining data by image compression encoding. Based on this framework, we propose a novel lossless similarity-based deduplication (SBD) scheme for decoded image data (called imDedup). Specifically, imDedup uses a novel and fast sampling method (called Feature Map) to detect similar images in a two-dimensional way, which greatly reduces computation overhead. Meanwhile, it uses a novel delta encoder (called Idelta) which incorporates image compression encoding characteristics into deduplication to guarantee the remaining deduplicated image data to be friendly re-compressed via image encoding, which significantly improves the compression ratio. We implement a prototype of imDedup for JPEG images, and demonstrate its superiority on four datasets: Compared with exact image deduplication, imDedup achieves a 19%-38% higher compression ratio by efficiently eliminating fine-grained redundancy. Compared with the similarity detector and delta encoder of state-of-the-art SBD schemes running on the decoded image data, imDedup achieves a 1.8×-3.4× higher throughput and a 1.3 ×-1. 6 × higher compression ratio, respectively.","tags":["deduplication"],"title":"imDedup: A Lossless Deduplication Scheme to Eliminate Fine-grained Redundancy among Images","type":"publication"},{"authors":["Giorgio (Erci) Xu"],"categories":["Review"],"content":" 《Skunk Works》是洛克希德马丁公司旗下臭鼬工厂第二任掌门Ben Rich的回忆录，其中谈及了U-2（蛟龙夫人）、SR-71（黑鸟）以及F-117A（夜鹰）等职业生涯得意之作，也回忆了许多冷战时期两个阵营较量的历史，例如前苏联将越境侦查的U-2击落并活捉飞行员Francis Powers的冷战著名事件（相关故事在前几年的电影《间谍之桥》中亦有描述）。总的来看，这是一部相当不错的回忆录，不仅在于这些飞机与事件一直以来为人所津津乐道，也是因为作者出色的笔触展现了冷战这个特殊背景下华盛顿众官员、军工企业负责人乃至平头百姓的浮世绘。\nSkunk Works的中国综合症 中国作为冷战阵营中的一个特殊角色，特别是在中苏十年论战时期和中美建交前夕，对世界格局产生了深远的影响，也间接影响到了Skunk Works的研发与武器部署。例如，在Powers坠机事件后，时任美总统的艾森豪威尔迫于国际舆论压力以及避免更多的U-2被击落，因此放弃了部署U-2越境侦察苏联及东欧国家。但CIA旋即找到台匪部队，成立了所谓黑猫中队开始了对中国，特别是罗布泊地区的常态化侦察。前后历经多年，共出动二百余架次侦照任务。谁料中国人向来聪明，前辈们靠着改进型的SA-2地对空导弹，“捅竹竿”式的把U-2捅下来四五架，让中国成为现今U-2“保有量”第二多的国家。因此，Ben Rich在回顾这段历史中，无不感慨地把标题取成了China Syndrome (即中国综合症）。\n技术所带来的傲慢 Skunk Works无疑是美军工领域皇冠上的明珠，其看家本领就是做高性能的侦察机。在谍照卫星尚不发达的年代，派遣高速飞机抵近或飞跃他国领土进行侦察似乎成了美帝的应有之义。如果说越战期间，北越作为正式宣战的敌对国家，侦察也好，轰炸也好，还似乎有法可依。那么，五六十年代对中苏的越境飞行，就可以说是罔顾国际法律与准则，仗着科技实力为所欲为。\n值得注意的是，这种心态不仅在决策者身上有，在执行者层面上亦非常突出。例如，若干飞行员都提到一个情况。在初期执行任务时，他们发现被侦测的国家往往急于掩盖地上目标等军事秘密，到了后期被侦查的国家似是无所谓般不对侦察行为采取主动或被动的隐藏手段。这些飞行员无不“诚恳”地表示本该如此，让我们看完了，了解完了，知道贵国没有迫在眉睫的战争威胁就行了。更为荒唐的是，这种傲慢居然也在对待邻国身上。在一次SR-71的任务中，因燃料不足，美飞行员直接不打招呼横穿法国本土领空。甚至于在法国派出幻影3拦截并询问黑鸟驾驶员通行识别码时，美飞行员直接冲着对方比了个中指，凭借性能优势，一加油门，直接逃逸。\n如何当好接班人 Ben Rich是Skunk Works的第二任掌门，而第一任就是赫赫有名的Kelly Johnson。在Kelly退休前期，他保举了Ben作为接班人。书里说的虽然比较委婉，但在我看来，这个班委实不好接。一是，Kelly作为创始人，缔造过P-38、F-104、U-2以及SR-71等经典作品，在工厂群众中享有崇高的威望。二是，Kelly的行事风格，依书描述，可谓事无巨细，事必躬亲，因此很多研发人员以“找Kelly把把关”为工作守则。三是，Kelly退而不休，经常回老单位串门，帮助工作。这样一来，工厂群众一有问题，就等Kelly这个太上皇回来，而往往把Ben晾在一边。\nBen作为新掌门显然对老同志们频繁找Kelly反映问题心怀不满。然而，明面上肯定不好发作。一则，不能把矛头指向老同志。一方面，这会加剧干群矛盾耽误工作。另一方面，这些老同志作为技术骨干是工厂的核心，简单地开除了事，显然更是拆自己台。二来，Ben也不好讲Kelly的闲话，毕竟自己的执政合法性在于Kelly的保举，贸然地采取一些举措（例如禁止员工向Kelly汇报等）无异于自寻短见。\n最终Ben采取的，在我看来，是一种阳谋、阴谋结合的方式。在台面上，和Kelly挑明了这种时候应当“人走茶凉”，给继任者以施展拳脚的空间。在台面下，随着军方官僚主义的抬头，文山会海和繁琐的规定蜂拥而至，Ben藉着保密规定这一点，借坡下驴逐步地将Kelly排除在后续项目之外。同时，利用Have Blue (F-117A的原型机)项目积极扶持少壮派，增加自己说话的份量。两相结合，虽然用了四五年，但也算是平稳交班。当然我们应该看到，Skunk Works后续的成功，仍应归功于Ben自身出色的洞察力与远见（由他讨论B-2的失败与预见下一代战略轰炸机的发展事实可见一斑）。一味醉心于玩弄权术，是没有可能带好这种级别的队伍的。\n从做飞机到做计算机 在读到书中关于若干飞机的设计讨论时，我时常会联想到自己在计算机系统领域科研工作，有很多思路颇为值得借鉴。例如，我非常同意Skunk Works在原型设计对一个性能指标摈除杂念的单纯追求。例如，SR-71的设计是为了打造一款3万米（实际约为2万5左右）、3马赫巡航的侦察飞机。因此，设计紧紧围绕这个目标，剩余的部分（包括机动性、构型等）都可以商榷。我在系统研究中，也往往面临大量这样抉择，反思过往的工作，仍然没有做到极致的偏执，很多时候会为了所谓的Practicality牺牲自己的特色，把长板去补了所谓的水桶。\n写在最后 我并非军迷，对冷战历史可以说知之甚少。若有不符事实与史实之处，敬请批评指正。\n","date":1633564800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1633564800,"objectID":"7b0ea7684560bb0809d8d8c93e28c6ab","permalink":"https://giorgioercixu.github.io/post/skunk-work/","publishdate":"2021-10-07T00:00:00Z","relpermalink":"/post/skunk-work/","section":"post","summary":"A book review for Ben. Rich's memoir of his years at Skunk Works.","tags":["Chinese","Review"],"title":"Skunk Works Review (Chinese)","type":"post"},{"authors":["Xiaojian Liao","Youyou Lu","Erci Xu","Jiwu Shu"],"categories":null,"content":"","date":1626220800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1626220800,"objectID":"5065bc8cffae94967d87604aa38c65a3","permalink":"https://giorgioercixu.github.io/publication/atc21/","publishdate":"2021-07-14T00:00:00Z","relpermalink":"/publication/atc21/","section":"publication","summary":"The bandwidth of flash storage has been surging in recent years. Employing multicores to fully unleash its abundant bandwidth becomes a necessary step towards building high performance storage systems. This paper presents the design and implementation of Max, a multicore-friendly log-structured file system (LFS) for flash storage. With three main techniques, Max systematically improves the scalability of LFS while retaining the flash-friendly design. First, we propose a new reader-writer semaphore to scale the user I/Os with negligible impact on the internal operations of LFS. Second, we introduce file cell to scale the access to in-memory index and cache while delivering concurrency- and flash-friendly on-disk layout. Third, to fully exploit the flash parallelism, we advance the single log design with runtime-independent log partitions, and delay the ordering and consistency guarantees to crash recovery. We implement Max based on the F2FS in the Linux kernel. Evaluations show that Max significantly improves scalability, and achieves an order of magnitude higher throughput than existing Linux file systems.","tags":["SSD","NVM","storage"],"title":"Max: A Multicore-Accelerated File System for Flash Storage","type":"publication"},{"authors":["Wang Li","Zhouyang Jia","Shanshan Li","Yuanliang Zhang","Teng Wang","Erci Xu","Ji Wang","Xiangke Liao"],"categories":null,"content":"","date":1625961600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1625961600,"objectID":"21bdee6e77f43081bc278a2ad79fb131","permalink":"https://giorgioercixu.github.io/publication/issta21/","publishdate":"2021-07-11T00:00:00Z","relpermalink":"/publication/issta21/","section":"publication","summary":"Configuration error injection testing (CEIT) could systematically evaluate software reliability and diagnosability to runtime configuration errors. This paper explores the challenges and opportunities of applying CEIT technique. We build an extensible, highly-modularized CEIT framework named CeitInspector to experiment with various CEIT techniques. Using CeitInspector, we quantitatively measure the effectiveness and efficiency of CEIT using six mature and widely-used server applications. During this process, we find a fair number of test cases are left unstudied by the prior research work. The injected configuration errors in these cases often indicate latent misconfigurations, which might be ticking time bombs in the system and lead to severe damage. We conduct an in-depth study regarding these cases to reveal the root causes, and explore possible remedies. Finally, we come up with actionable suggestions guided by our study to improve the effectiveness and efficiency of the existing CEIT techniques.","tags":["software engineering","configuration","fuzzing","bug detection"],"title":"Challenges and opportunities: an in-depth empirical study on configuration error injection testing","type":"publication"},{"authors":["Zhouyang Jia","Shanshan Li","Tingting Yu","Zeng Chen","Erci Xu","Xiaodong Liu","Ji Wang","Xiangke Liao"],"categories":null,"content":"","date":1620345600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1620345600,"objectID":"4fba9aa385a3d3294a5a315678302ffc","permalink":"https://giorgioercixu.github.io/publication/icse21/","publishdate":"2021-05-07T00:00:00Z","relpermalink":"/publication/icse21/","section":"publication","summary":"Applications depend on libraries to avoid reinventing the wheel. Libraries may have incompatible changes during evolving. As a result, applications will suffer from compatibility failures. There has been much research on addressing detecting incompatible changes in libraries, or helping applications co-evolve with the libraries. The existing solution helps the latest application version work well against the latest library version as an afterthought. However, end users have already been suffering from the failures and have to wait for new versions. In this paper, we propose DepOwl, a practical tool helping users prevent compatibility failures. The key idea is to avoid using incompatible versions from the very beginning. We evaluated DepOwl on 38 known compatibility failures from StackOverflow, and DepOwl can prevent 35 of them. We also evaluated DepOwl using the software repository shipped with Ubuntu-19.10. DepOwl detected 77 unknown dependency bugs, which may lead to compatibility failures.","tags":["software engineering","software dependability","bug detection"],"title":"DepOwl: Detecting Dependency Bugs to Prevent Compatibility Failures","type":"publication"},{"authors":["Qing Wang","Youyou Lu","Erci Xu","Junru Li","Youmin Chen","Jiwu Shu"],"categories":null,"content":"","date":1613779200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1613779200,"objectID":"46123eb0045e30f78f03cc19fffee0ca","permalink":"https://giorgioercixu.github.io/publication/fast21/","publishdate":"2020-07-20T00:00:00Z","relpermalink":"/publication/fast21/","section":"publication","summary":"Distributed shared memory (DSM) is experiencing a resurgence with emerging fast network stacks. Caching, which is still needed for reducing frequent remote access and balancing load, can incur high coherence overhead. In this paper, we propose CONCORDIA, a DSM with fast in-network cache coherence backed by programmable switches. At the core of CONCORDIA is FLOWCC, a hybrid cache coherence protocol, enabled by a collaborative effort from switches and servers. Moreover, to overcome limitations of programmable switches, we also introduce two techniques: (i) an ownership migration mechanism to address the problem of limited memory capacity on switches and (ii) idempotent operations to handle packet loss in the case that switches are stateful. To demonstrate CONCORDIA’s practical benefits, we build a distributed key-value store and a distributed graph engine on it, and port a distributed transaction processing system to it. Evaluation shows that CONCORDIA obtains up to 4.2x, 2.3x and 2x speedup over state-of-the-art DSMs on key-value store, graph engine and transaction processing workloads, respectively.","tags":["SSD","NVM","storage"],"title":"Concordia: Distributed shared memory with in-network cache coherence","type":"publication"},{"authors":["Xiaojian Liao","Youyou Lu","Erci Xu","Jiwu Shu"],"categories":null,"content":"","date":1604448000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1604448000,"objectID":"4667542e09b118d4a2e489da02289d3d","permalink":"https://giorgioercixu.github.io/publication/osdi20/","publishdate":"2020-11-04T00:00:00Z","relpermalink":"/publication/osdi20/","section":"publication","summary":"Storage systems rely on write dependency to achieve atomicity and consistency. However, enforcing write dependency comes at the expense of performance; it concatenates multiple hardware queues into a single logical queue, disables the concurrency of flash storage and serializes the access to isolated devices. Such serialization prevents the storage system from taking full advantage of high-performance drives (e.g., NVMe SSD) and storage arrays.\nIn this paper, we propose a new IO stack called Horae to alleviate the write dependency overhead for high-performance drives. Horae separates the dependency control from the data flow, and uses a dedicated interface to maintain the write dependency. Further, Horae introduces the joint flush to enable parallel FLUSH commands on individual devices, and write redirection to handle dependency loops and parallelize in-place updates. We implement Horae in Linux kernel and demonstrate its effectiveness through a wide variety of workloads. Evaluations show Horae brings up to 1.8× and 2.1× performance gain in MySQL and BlueStore, respectively.","tags":["SSD","storage","consistency"],"title":"Write Dependency Disentanglement with HORAE","type":"publication"},{"authors":["Haochen He","Zhouyang Jia","Shanshan Li","Erci Xu","Tingting Yu","Yue Yu","Ji Wang","Xiangke Liao"],"categories":null,"content":"","date":1600646400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1600646400,"objectID":"91292c41d3667d8eb97ec1bf02f78fc4","permalink":"https://giorgioercixu.github.io/publication/ase20/","publishdate":"2020-09-21T00:00:00Z","relpermalink":"/publication/ase20/","section":"publication","summary":"Performance bugs are often hard to detect due to their non fail-stop symptoms. Existing debugging techniques can only detect performance bugs with known patterns (e.g., inefficient loops). The key reason behind this incapability is the lack of a general test oracle. Here, we argue that the performance (e.g., throughput, latency, execution time) expectation of configuration can serve as a strong oracle candidate for performance bug detection. First, prior work shows that most performance bugs are related to configurations. Second, the configuration change reflects common expectation on performance changes. If the actual performance is contrary to the expectation, the related code snippet is likely to be problematic. In this paper, we first conducted a comprehensive study on 173 real-world configuration-related performance bugs (CPBugs) from 12 representative software systems. We then derived seven configuration-related performance properties, which can serve as the test oracle in performance testing. Guided by the study, we designed and evaluated an automated performance testing framework, CP-DETECTOR, for detecting real-world configuration-related performance bugs. CP-DETECTOR was evaluated on 12 open-source projects. The results showed that it detected 43 out of 61 existing bugs and reported 13 new bugs.","tags":["software engineering","performance bug","bug detection"],"title":"CP-Detector: Using Configuration-related Performance Properties to Expose Performance Bugs","type":"publication"},{"authors":["Zhe Yang","Youyou Lu","Erci Xu","Jiwu Shu"],"categories":null,"content":"","date":1595203200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1595203200,"objectID":"1244d289bd01b527b63529254e5f8d1d","permalink":"https://giorgioercixu.github.io/publication/dac20/","publishdate":"2020-07-20T00:00:00Z","relpermalink":"/publication/dac20/","section":"publication","summary":"Block I/O serves as a classic interface for accessing storage devices with portability. But it can also cause extra overhead by enforcing transferring data in the unit of blocks. In this paper, we present CoinPurse, a device-assisted file system with dual interfaces. By leveraging non-volatile memory (NVM) in SSD, CoinPurse manages to adaptively persist writes through both the block I/O and a byte-addressable partial update interface. In addition, we also develop a set of techniques to overcome hardware limitations and resolve possible consistency conflicts. Evaluation shows that CoinPurse outperforms F2FS, a popular flash-optimized file system, by up to 33.2%.","tags":["SSD","interface"],"title":"CoinPurse: A Device-Assisted File System with Dual Interfaces","type":"publication"},{"authors":["Erci Xu","Mai Zheng","Feng Qin","Yikang Xu","Jiesheng Wu"],"categories":null,"content":"","date":1561939200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1561939200,"objectID":"da64ee320d4560556ae0e7197e1e8ea8","permalink":"https://giorgioercixu.github.io/publication/atc19/","publishdate":"2019-07-01T00:00:00Z","relpermalink":"/publication/atc19/","section":"publication","summary":"Modern datacenters increasingly use flash-based solid state drives (SSDs) for high performance and low energy cost. However, SSD introduces more complex failure modes compared to traditional hard disk. While great efforts have been made to understand the reliability of SSD itself, it remains unclear what types of system level failures are related to SSD, what are the root causes, and how the rest of the system interacts with SSD and contributes to failures. Answering these questions can help practitioners build and maintain highly reliable SSD-based storage systems.\n\nIn this paper, we study the reliability of SSD-based storage systems deployed in Alibaba Cloud, which cover near half a million SSDs and span over three years of usage under representative cloud services. We take a holistic view to analyze both device errors and system failures to better understand the potential casual relations. Particularly, we focus on failures that are Reported As \"SSD-Related\" (RASR) by system status monitoring daemons. Through log analysis, field studies, and validation experiments, we identify the characteristics of RASR failures in terms of their distribution, symptoms, and correlations. Moreover, we derive a number of major lessons and a set of effective methods to address the issues observed. We believe that our study and experience would be beneficial to the community and could facilitate building highly-reliable SSD-based storage systems.","tags":["SSD","storage","fault tolerance"],"title":"Lessons and Actions: What We Learned from 10K SSD-Related Storage System Failures","type":"publication"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\nFeatures Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides Controls Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot;\rif porridge == \u0026quot;blueberry\u0026quot;:\rprint(\u0026quot;Eating...\u0026quot;)\rMath In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}}\r{{% fragment %}} **Two** {{% /fragment %}}\r{{% fragment %}} Three {{% /fragment %}}\rPress Space to play!\nOne **Two** Three A fragment can accept two optional parameters:\nclass: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}}\r- Only the speaker can read these notes\r- Press `S` key to view\r{{% /speaker_note %}}\rPress the S key to view the speaker notes!\nOnly the speaker can read these notes Press S key to view Themes black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/media/boards.jpg\u0026quot; \u0026gt;}}\r{{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}}\r{{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}\rCustom CSS Example Let\u0026rsquo;s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1,\r.reveal section h2,\r.reveal section h3 {\rcolor: navy;\r}\rQuestions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://giorgioercixu.github.io/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":["Erci Xu","Mai Zheng","Feng Qin","Jiesheng Wu","Yikang Xu"],"categories":null,"content":"","date":1542499200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1542499200,"objectID":"ce1cedc47c18c923ef1f0ef0e364570e","permalink":"https://giorgioercixu.github.io/publication/sc18/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/sc18/","section":"publication","summary":"Modern datacenters increasingly use flash-based solid state drives (SSDs) for high performance and low energy cost. However, SSDs introduce more complex failure modes compared to traditional hard disks. While great efforts have been made to understand the reliability of SSDs itself, it remains unclear how the device-level errors may affect upper layers, or how the services running on top of the storage stack may affect the SSDs.\n\nIn this paper, we take a holistic view to examine the reliability of SSD-based storage systems in Alibabas datacenters, which covers about half-million SSDs under representative cloud services over three years. By vertically analyzing the error events across three layers (i.e., SSDs, OS, and the distributed file system), we discover a number of interesting correlations. For example, SSDs with UltraDMA CRC errors, while seems benign at the device level, are nearly 3 times more likely to lead to OS-level error events. As another example, different cloud services may lead to different usage patterns of SSDs, some of which are detrimental from the devices perspective.","tags":["SSD","fault tolerance"],"title":"Understanding SSD Reliability in Large-Scale Cloud Systems","type":"publication"},{"authors":["Erci Xu","Mohit Saxena","Lawrence Chiu"],"categories":null,"content":"","date":1467331200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1467331200,"objectID":"925d1ebbfdb57ad005fd439d7a74d86a","permalink":"https://giorgioercixu.github.io/publication/hotstorage16/","publishdate":"2016-07-01T00:00:00Z","relpermalink":"/publication/hotstorage16/","section":"publication","summary":"In-memory analytics frameworks such as Apache Spark are rapidly gaining popularity as they provide order of magnitude performance speedup over disk-based systems for iterative workloads. For example, Spark uses the Resilient Distributed Dataset (RDD) abstraction to cache data in memory and iteratively compute on it in a distributed cluster.\n\nIn this paper, we make the case that existing abtractions such as RDD are coarse-grained and only allow discrete cache levels to be used for caching data. This results in inefficient memory utilization and lower than optimal performance. In addition, relying on the programmer to enforce caching decisions for an RDD makes it infeasible for the system to adapt to runtime changes. To overcome these challenges, we propose Neutrino that employs fine-grained memory caching of RDD partitions and adapts to the use of different in-memory cache levels based on runtime characteristics of the cluster. First, it extracts a data flow graph to capture the data access dependencies between RDDs across different stages of a Spark application without relying on cache enforcement decisions from the programmer. Second, it uses a dynamic-programming based algorithm to guide caching decisions across the cluster and adaptively convert or discard the RDD partitions from the different cache levels.\n\nWe have implemented a prototype of Neutrino as an extension to Spark and use four different machine-learning workloads for performance evaluation. Neutrino improves the average job execution time by up to 70% over the use of Spark’s native memory cache levels.","tags":["Spark","caching"],"title":"Neutrino: Revisiting Memory Caching for Iterative Data Analytics","type":"publication"},{"authors":null,"categories":null,"content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"e8f8d235e8e7f2efd912bfe865363fc3","permalink":"https://giorgioercixu.github.io/project/example/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/example/","section":"project","summary":"An example of using the in-built project page.","tags":["Deep Learning"],"title":"Example Project","type":"project"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"f26b5133c34eec1aa0a09390a36c2ade","permalink":"https://giorgioercixu.github.io/admin/config.yml","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/admin/config.yml","section":"","summary":"","tags":null,"title":"","type":"wowchemycms"}]